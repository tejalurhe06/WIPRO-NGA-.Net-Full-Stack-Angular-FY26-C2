@model LibraryManagementSystem.Core.Models.Author

@{
    ViewData["Title"] = "Delete Author";
}

<h1>Delete Author</h1>

<h3>Are you sure you want to delete this author?</h3>
<div>
    <h4>@Model.Name</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Biography)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Biography)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfBirth)
        </dd>
        <dt class="col-sm-2">
            Books
        </dt>
        <dd class="col-sm-10">
            @if (Model.Books.Any())
            {
                <div class="alert alert-warning">
                    <strong>Warning!</strong> This author has @Model.Books.Count book(s). Deleting this author will also delete all associated books.
                    <ul class="mt-2">
                        @foreach (var book in Model.Books)
                        {
                            <li>@book.Title</li>
                        }
                    </ul>
                </div>
            }
            else
            {
                <span>No books found for this author.</span>
            }
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </form>
</div>